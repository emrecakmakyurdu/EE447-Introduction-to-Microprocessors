		AREA	main,	READONLY,	CODE
		THUMB
		EXTERN	CONVRT
		EXTERN	OutStr
		EXTERN	InChar
		EXTERN	UPBND
		EXPORT	__main
		
;	R0 <- N
;	R1 <- DOWN
;	R2 <- UP
;	R4 <- GUESS
NUM		EQU	0X20000500
	
MSG     	DCB     	"INPUT SHOULD BE LOWER THAN 32  "
			DCB			0x0D		; Carriage return is like new line
			DCB			0x04		; it is like EOF or \0		

MSG1     	DCB     	"GUESS: "
			DCB			0x0D		; Carriage return is like new line
			DCB			0x04		; it is like EOF or \0			

MSG2     	DCB     	"THE LAST GUESS IS CORRECT"
			DCB			0x0D		; Carriage return is like new line
			DCB			0x04		; it is like EOF or \0			
INV     	DCB     	"INVALID"
			DCB			0x0D		; Carriage return is like new line
			DCB			0x04		; it is like EOF or \0			


__main
; 2 TANE ASCII DEC INPUT ALDIGIM YER VE ONLARI ASCII'DEN KURTARIYORUM, R0 INPUT OLUYOR
; INPUT XX SEKLINDE GELECEK VE EGER 0-9 ISE 0X SEKLINDE GIRILMEK ZORUNDA
INPUT	MOV		R0,#0		; THIS WILL BE MY INPUT IN DECIMAL
		MOV		R1,#10		;
		BL		InChar
		SUB		R5,#48		; REMOVE ASCII OFFSET
		MUL		R5,R1		; MULTIPLY BY 10
		ADD		R0,R5		; ADD
		BL		InChar
		SUB		R5,#48		; REMOVE ASCII OFFSET
		ADD		R0,R5		; ADD
		
		CMP		R0,#31		; INPUT 31DEN BUYUKSE TEKRAR INPUT ISTE
		LDRHI	R5,=MSG
		BLHI	OutStr
		BHI		INPUT
		
		CMP		R0,#0		; INPUT 0 ISE UP DEGERIMIZ 1 OLMALI
		MOVEQ	R2,#1
		BEQ		JUMP
			
		CPY 	R3,R0		; R3 KADAR UST ALCAM R2=R0
		MOV		R2,#1
		MOV		R1,#2
EXP		MUL		R2,R1		; UST ALMA
		SUBS	R3,#1
		BNE		EXP			; R2 BENIM UP DEGERIM OLDU
		
JUMP	MOV		R5,#2		; 2'YE BOLMEK ICIN LAZIM
		MOV		R1,#0		; R1 BENIM LOW DEGERIM OLDU
		ADD		R4,R1,R2	; GUESS = (UP+DOWN)/2
		UDIV	R4,R5		; R4 BENIM TAHMINIM OLDU
		NOP
		NOP
		NOP
		
	
;	SIMDI R4'U EKRANA YAZICAM, BUNU YAPMAK ICIN CONVRT KULLANMAM LAZIM
LOOP2	LDR		R5,=MSG1
		BL		OutStr
		LDR		R5,=NUM
		BL		CONVRT
		LDR		R5,=NUM
		BL		OutStr
;	USER C U YA DA D INPUTUNU GIRECEK, R5 OLACAK BU
		BL		InChar
;	R5 = C ISE PROGRAM SONLANACAK
		CMP		R5,#67
		BEQ		EXIT
;	DEGIL ISE UPBND CAGIRILACAK, R5'E GORE D YA DA U ISLEMI YAPILACAK, LOOP'A DONULECEK
		CMP		R1,R2	; IF LOWER=UPPER AND INPUT IS NOT C, GO TO BEGINNING, CHANGE NOTHING
		PUSHEQ	{R5}
		LDREQ	R5,=INV
		BLEQ	OutStr
		POPEQ	{R5}
		BEQ		LOOP2
		NOP
		NOP
		BL		UPBND	;
		NOP
		NOP
		B		LOOP2

EXIT	LDR		R5,=MSG2
		BL		OutStr
		NOP
		NOP
XD		B		XD
		ALIGN
		END
		
		
			
		